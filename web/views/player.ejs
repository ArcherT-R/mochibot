<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Mochi Bar - <%= player.username %></title>
<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
<style>
    /* Base Styles - Adjusted for Aesthetic */
    body { 
        font-family: 'Roboto', sans-serif; 
        background: #f0f2f5; /* Light grey background */
        margin: 0; 
        padding: 0; 
        color: #333;
    }
    header { 
        background: #6cb4ee; /* Blue banner */
        padding: 25px 20px; 
        text-align: center; 
        font-size: 32px; /* Larger title */
        font-weight: 700; 
        color: white; 
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    .header-text {
        font-size: 38px; /* Slightly larger for "Mochi Bar Database" */
        text-shadow: 1px 1px 2px rgba(0,0,0,0.2);
    }
    .container { 
        max-width: 1100px; /* Slightly narrower to match image */
        margin: 30px auto; /* More vertical spacing */
        padding: 20px; 
        display: flex; 
        gap: 25px; /* Increased gap between columns */
        flex-wrap: wrap; 
        align-items: flex-start; /* Align columns to the top */
    }

    /* Column Styling */
    .column { 
        background: #ffffff; 
        padding: 25px; /* More padding */
        border-radius: 10px; /* Softer corners */
        box-shadow: 0 4px 10px rgba(0,0,0,0.08); /* Subtle shadow */
        flex: 1; 
        min-width: 280px; /* Slightly wider min-width */
        box-sizing: border-box; 
    }
    .column h3 { 
        margin-top: 0; 
        margin-bottom: 20px; /* Space below title */
        font-size: 22px; 
        font-weight: 700; 
        color: #555;
        border-bottom: 2px solid #ddd; /* Lighter separator */
        padding-bottom: 10px; 
    }

    /* Profile Column Specifics */
    .avatar-wrapper {
        text-align: center;
        margin-bottom: 20px;
    }
    .avatar { 
        width: 120px; /* Smaller avatar */
        height: 120px; 
        border-radius: 50%; 
        border: 3px solid #6cb4ee; /* Blue border for avatar */
        object-fit: cover;
    }

    /* Generic Box Styling */
    .box { 
        background: #e9f0f7; /* Lighter, more aesthetic background for boxes */
        padding: 12px 15px; /* More padding */
        border-radius: 8px; /* Softer corners */
        margin-bottom: 15px; /* More space between boxes */
        word-wrap: break-word; 
        font-size: 1.05em;
        line-height: 1.4;
        color: #444;
        box-shadow: inset 0 1px 3px rgba(0,0,0,0.05); /* Inner shadow for depth */
    }
    .box strong { color: #222; }

    /* Separators */
    hr { 
        border: none; 
        border-top: 2px solid #ccc; /* Thicker, slightly darker HR */
        margin: 25px 0; 
    }

    /* Sessions Column */
    .ongoing-session-box {
        background: #d4edda; /* Light green for ongoing session */
        border: 1px solid #28a745; /* Green border */
        color: #155724;
        font-weight: bold;
        text-align: center;
        padding: 15px;
    }
    #live-time { font-size: 1.4em; color: #155724; } /* Darker green for live time */

    .sessions-scroll {
Â  Â      max-height: 320px; /* Slightly more height */
Â  Â      overflow-y: auto;
Â  Â      padding-right: 10px; /* More padding for scrollbar */
Â    }
    .sessions-scroll::-webkit-scrollbar {
        width: 8px;
    }
    .sessions-scroll::-webkit-scrollbar-thumb {
        background: #bbb;
        border-radius: 4px;
    }
    .sessions-scroll::-webkit-scrollbar-track {
        background: #f1f1f1;
    }

    /* Past session card styling */
Â    .session-box { 
Â  Â      background: #e9f0f7; /* Consistent box background */
        border: 1px solid #cce5ff; /* Light blue border */
Â  Â      padding: 10px 15px; 
Â  Â      border-radius: 8px; 
Â  Â      margin-bottom: 10px; 
Â  Â      word-wrap: break-word; 
Â  Â      cursor: pointer; 
Â  Â      transition: background 0.2s, transform 0.2s;
        font-size: 0.95em;
Â    }
Â    .session-box:hover {
Â  Â      background: #d4e3f4;
        transform: translateY(-2px); /* Slight lift on hover */
Â    }
    .session-box strong { font-size: 1.1em; color: #007bff; }

    /* Shifts Column */
    .shift-box {
        background: #e9f0f7; /* Consistent box background */
        border: 1px solid #cce5ff; /* Light blue border */
        padding: 12px 15px;
        border-radius: 8px;
        margin-bottom: 15px;
        font-size: 1.05em;
        line-height: 1.4;
    }
    .shift-box strong { color: #007bff; }

    /* Modal - Card for Past Session Details */
    .modal {
        display: none; 
        position: fixed; 
        z-index: 1000; /* Higher z-index to be on top of everything */
        left: 0; 
        top: 0;
        width: 100%; 
        height: 100%; 
        overflow: auto; 
        background-color: rgba(0,0,0,0.5); /* Darker overlay */
        backdrop-filter: blur(5px); /* Blurred background */
    }
    .modal-content {
        background-color: #ffffff;
        margin: 10% auto; 
        padding: 0;
        border-radius: 12px; /* Softer corners */
        width: 90%; 
        max-width: 450px; /* Slightly larger card */
        box-shadow: 0 8px 25px rgba(0,0,0,0.3); /* More prominent shadow */
        animation: fadeIn 0.3s ease-out; /* Fade-in animation */
    }
    .modal-header {
        background-color: #6cb4ee; /* Blue banner */
        color: white;
        padding: 15px 20px; /* More padding */
        text-align: center;
        font-weight: 700;
        font-size: 1.3em;
        border-top-left-radius: 12px;
        border-top-right-radius: 12px;
        position: relative;
    }
    .modal-body { 
        padding: 25px; /* More padding */
        line-height: 1.6;
        font-size: 1.05em;
    }
    .modal-body p { margin-bottom: 12px; }
    .modal-body strong { display: inline-block; width: 130px; color: #444; } /* Adjusted width for labels */
    .close {
        color: white;
        float: right;
        font-size: 30px; /* Larger X */
        font-weight: bold;
        position: absolute;
        right: 15px;
        top: 10px;
        line-height: 1;
    }
    .close:hover,
    .close:focus {
        color: #eee;
        text-decoration: none;
        cursor: pointer;
    }

    /* Fade-in animation for modal */
    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(-20px); }
        to { opacity: 1; transform: translateY(0); }
    }

    /* Responsive adjustments */
    @media (max-width: 768px) {
        .container { flex-direction: column; gap: 20px; padding: 15px; }
        .column { width: 100%; min-width: unset; }
        .avatar { width: 100px; height: 100px; }
        header { font-size: 28px; padding: 20px 15px; }
        .header-text { font-size: 32px; }
        .modal-content { width: 95%; margin: 15% auto; }
    }
</style>
</head>
<body>

<header><span class="header-text">Mochi Bar Database</span></header>

<div class="container">

Â  Â  <div class="column">
Â  Â  <h3>Username</h3>
Â  Â  <div class="avatar-wrapper">
Â  Â  Â  <img src="<%= player.avatar_url %>" alt="Avatar" class="avatar" onerror="this.src='https://placehold.co/120x120/e0e6f0/5f6c7b?text=Error';">
Â  Â  </div>
Â  Â  <div class="box"><strong><%= player.username %></strong></div>
Â  Â  <div class="box"><strong>Group Rank:</strong> <%= player.group_rank %></div>
Â  Â  <div class="box"><strong>Notes:</strong> <%= player.notes || 'No notes available.' %></div>
Â  </div>

Â  Â  <div class="column">
Â  Â  <h3>Sessions</h3>

Â  Â  Â  Â  <% if (ongoingSession) { 
        // CRITICAL FIX: Use session_start_time if available, otherwise fall back to current time (Date.now())
        const startTimeString = ongoingSession.session_start_time;
        const startTime = startTimeString ? new Date(startTimeString).getTime() : Date.now();
Â  Â  %>
Â  Â  Â  <div class="box ongoing-session-box" id="ongoing-session-box">
Â  Â  Â  Â  <strong>ðŸŸ¢ ONGOING SESSION</strong><br>
Â  Â  Â  Â  <span>Started: <%= new Date(startTime).toLocaleString() %></span><br>
Â  Â  Â  Â  <span>Time In Game: <span id="live-time">00:00:00</span></span>
Â  Â  Â  Â  <input type="hidden" id="session-start-time" value="<%= startTime %>">
Â  Â  Â  </div>
Â  Â  <% } else { %>
Â  Â  Â  <div class="box">No ongoing session</div>
Â  Â  <% } %>

Â  Â  <hr>
Â  Â  
Â  Â  Â  Â  <div class="sessions-scroll">
Â  Â  Â  <% if (sessions && sessions.length > 0) { %>
Â  Â  Â  Â  <% sessions.slice(0,4).forEach((s, index) => { %>
Â  Â  Â  Â  Â  <div class="session-box" onclick="showSessionDetails(<%= index %>)">
Â  Â  Â  Â  Â  Â  <strong>Past Session <%= index + 1 %></strong><br>
Â  Â  Â  Â  Â  Â  <span>Minutes Played: <%= s.minutes_played %></span>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  <% }) %>
Â  Â  Â  <% } else { %>
Â  Â  Â  Â  <div class="session-box">No past sessions.</div>
Â  Â  Â  <% } %>
Â  Â  </div>
Â  </div>

Â  Â  <div class="column">
Â  Â  <h3>Shifts</h3>
Â  Â  <div class="box shift-box"><strong>Attended:</strong> <%= shifts.attended || 0 %></div>
Â  Â  <div class="box shift-box"><strong>Hosted:</strong> <%= shifts.hosted || 0 %></div>
Â  Â  
Â  Â  <hr>
Â  Â  <% if (shifts.coHosted && shifts.coHosted.length > 0) { %>
Â  Â  Â  <h4>Co-Hosted Shifts</h4>
Â  Â  Â  <% shifts.coHosted.forEach(c => { %>
Â  Â  Â  Â  <div class="box shift-box">
Â  Â  Â  Â  Â  <strong>Shift:</strong> <%= c.name %><br>
Â  Â  Â  Â  Â  <span>Host: <%= c.host %></span>
Â  Â  Â  Â  </div>
Â  Â  Â  <% }) %>
Â  Â  <% } else { %>
Â  Â  Â  <div class="box shift-box">No co-hosted shifts.</div>
Â  Â  <% } %>
Â  </div>

</div>

<div id="sessionModal" class="modal">
Â  <div class="modal-content">
Â  Â  <div class="modal-header">
Â  Â  Â  <span class="close" onclick="closeModal()">&times;</span>
Â  Â  Â  <span id="modal-header-text"><%= player.username %> - <%= player.group_rank %></span>
Â  Â  </div>
Â  Â  <div class="modal-body">
Â  Â  Â  <p><strong>Username:</strong> <%= player.username %></p>
Â  Â  Â  <p><strong>Time In Game:</strong> <span id="modal-minutes-played"></span> minutes</p>
Â  Â  Â  <p><strong>Session Start:</strong> <span id="modal-session-start"></span></p>
Â  Â  Â  <p><strong>Session End:</strong> <span id="modal-session-end"></span></p>
Â  Â  </div>
Â  </div>
</div>

<script>
    // Data passed from server (full sessions list)
    const allSessions = JSON.parse('<%- JSON.stringify(sessions || []) %>');
    const playerUsername = "<%= player.username %>";
    const playerRank = "<%= player.group_rank %>";
    const modal = document.getElementById('sessionModal');

    // Utility function to format milliseconds to HH:MM:SS
    function formatTime(ms) {
        let totalSeconds = Math.floor(ms / 1000);
        let hours = Math.floor(totalSeconds / 3600);
        let minutes = Math.floor((totalSeconds % 3600) / 60);
        let seconds = totalSeconds % 60;

        const pad = num => String(num).padStart(2, '0');
        return `${pad(hours)}:${pad(minutes)}:${pad(seconds)}`;
    }

    /* ----------------------------------
     * 1. Live Counter Logic 
     * ---------------------------------- */

    const startTimeInput = document.getElementById('session-start-time');
    if (startTimeInput) {
        // Parse the timestamp passed from EJS
        const startTimeMs = parseInt(startTimeInput.value);
        
        function updateLiveCounter() {
            // Calculate elapsed time based on the database's start time
            const elapsed = Date.now() - startTimeMs; 
            document.getElementById('live-time').textContent = formatTime(elapsed);
        }

        updateLiveCounter();
        setInterval(updateLiveCounter, 1000);
    }


    /* ----------------------------------
     * 2. Modal/Clickable Session Logic
     * ---------------------------------- */

    function showSessionDetails(index) {
        const session = allSessions[index];
        if (!session) return;

        // Set Header (Blue banner content)
        const headerText = `${playerUsername} - ${playerRank}`;
        document.getElementById('modal-header-text').textContent = headerText;

        // Set Body Content
        document.getElementById('modal-minutes-played').textContent = session.minutes_played;
        document.getElementById('modal-session-start').textContent = new Date(session.session_start).toLocaleString();
        document.getElementById('modal-session-end').textContent = new Date(session.session_end).toLocaleString();

        // Show Modal
        modal.style.display = "block";
    }

    function closeModal() {
        modal.style.display = "none";
    }

    // Close the modal if the user clicks anywhere outside of the modal content
    window.onclick = function(event) {
        if (event.target === modal) {
            closeModal();
        }
    }
</script>

</body>
</html>
