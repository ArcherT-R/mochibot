<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Mochi Bar - <%= player.username %></title>
<style>
Â  /* Original CSS */
Â  body { font-family: Arial, sans-serif; background: #f0f0f0; margin:0; padding:0; }
Â  header { background: #6cb4ee; padding: 20px; text-align:center; font-size:24px; font-weight:bold; color: white; }
Â  .container { max-width: 1200px; margin:auto; padding:20px; display:flex; gap:20px; flex-wrap: wrap; }
Â  .column { background:white; padding:15px; border-radius:8px; flex:1; min-width:250px; box-sizing:border-box; }
Â  .column h3 { margin-top:0; border-bottom:2px solid #000; padding-bottom:5px; }
Â  .avatar { width:150px; height:150px; border-radius:50%; margin-bottom:10px; max-width:100%; }
Â  .box { background:#e9e9e9; padding:10px; border-radius:6px; margin-bottom:10px; word-wrap: break-word; }

Â  /* Scrollable past sessions */
Â  .sessions-scroll {
Â  Â  max-height: 300px;
Â  Â  overflow-y: auto;
Â  Â  padding-right: 5px;
Â  }

Â  /* Updated: Past session card styling for clickability */
Â  .session-box { 
Â  Â  background:#f5f5f5; 
Â  Â  padding:8px; 
Â  Â  border-radius:6px; 
Â  Â  margin-bottom:6px; 
Â  Â  word-wrap: break-word; 
Â  Â  cursor: pointer; /* Indicates clickability */
Â  Â  transition: background 0.2s;
Â  }
Â  .session-box:hover {
Â  Â  background: #e0e0e0;
Â  }

Â  /* New: Live Session Counter Style */
Â  #live-time { font-size: 1.2em; font-weight: bold; color: #007bff; }

Â  /* New: Modal for Session Details */
Â  .modal {
Â  Â  display: none; 
Â  Â  position: fixed; 
Â  Â  z-index: 10; 
Â  Â  left: 0; 
Â  Â  top: 0;
Â  Â  width: 100%; 
Â  Â  height: 100%; 
Â  Â  overflow: auto; 
Â  Â  background-color: rgba(0,0,0,0.4); 
Â  }
Â  .modal-content {
Â  Â  background-color: #fefefe;
Â  Â  margin: 10% auto; 
Â  Â  padding: 0;
Â  Â  border-radius: 10px;
Â  Â  width: 80%; 
Â  Â  max-width: 400px;
Â  Â  box-shadow: 0 5px 15px rgba(0,0,0,0.3);
Â  Â  overflow: hidden;
Â  }
Â  .modal-header {
Â  Â  background-color: #6cb4ee; /* Blue banner */
Â  Â  color: white;
Â  Â  padding: 10px;
Â  Â  text-align: center;
Â  Â  font-weight: bold;
Â  Â  position: relative;
Â  Â  /* Ensures text is visible */
Â  Â  word-wrap: break-word; 
Â  }
Â  .modal-body { padding: 20px; }
Â  .modal-body strong { display: inline-block; width: 100px; }
Â  .close {
Â  Â  color: white;
Â  Â  float: right;
Â  Â  font-size: 28px;
Â  Â  font-weight: bold;
Â  Â  position: absolute;
Â  Â  right: 10px;
Â  Â  top: 5px;
Â  }
Â  .close:hover,
Â  .close:focus {
Â  Â  color: #ccc;
Â  Â  text-decoration: none;
Â  Â  cursor: pointer;
Â  }

Â  /* Responsive: stack columns on mobile (Original) */
Â  @media (max-width: 768px) {
Â  Â  .container { flex-direction: column; gap:15px; padding:15px; }
Â  Â  .column { width: 100%; }
Â  Â  .avatar { width:100%; height:auto; }
Â  Â  .modal-content { width: 90%; margin: 20% auto; }
Â  }
</style>
</head>
<body>

<header>Mochi Bar - <%= player.username %></header>

<div class="container">

Â  Â  <div class="column">
Â  Â  <h3>Profile</h3>
Â  Â  <img src="<%= player.avatar_url %>" alt="Avatar" class="avatar" onerror="this.src='https://placehold.co/150x150/e0e6f0/5f6c7b?text=Error';">
Â  Â  <div class="box"><strong>Username:</strong> <%= player.username %></div>
Â  Â  <div class="box"><strong>Group Rank:</strong> <%= player.group_rank %></div>
Â  Â  <div class="box"><strong>Notes:</strong> <%= player.notes || 'No notes available.' %></div>
Â  </div>

Â  Â  <div class="column">
Â  Â  <h3>Sessions</h3>

Â  Â  Â  Â  <% if (ongoingSession) { 
Â  Â  Â  const startTime = new Date(ongoingSession.start || Date.now()).getTime(); 
Â  Â  %>
Â  Â  Â  <div class="box" id="ongoing-session-box">
Â  Â  Â  Â  <strong>ðŸŸ¢ ONGOING SESSION</strong><br>
Â  Â  Â  Â  <strong>Started:</strong> <%= new Date(startTime).toLocaleString() %><br>
Â  Â  Â  Â  <strong>Time in Game:</strong> <span id="live-time">00:00:00</span>
Â  Â  Â  Â  <input type="hidden" id="session-start-time" value="<%= startTime %>">
Â  Â  Â  </div>
Â  Â  <% } else { %>
Â  Â  Â  <div class="box">No ongoing session</div>
Â  Â  <% } %>

Â  Â  <hr>

Â  Â  Â  Â  <div class="sessions-scroll">
Â  Â  Â  <% if (sessions && sessions.length > 0) { %>
Â  Â  Â  Â  <% sessions.slice(0,4).forEach((s, index) => { %>
Â  Â  Â  Â  Â  <div class="session-box" onclick="showSessionDetails(<%= index %>)">
Â  Â  Â  Â  Â  Â  <strong>Session <%= index + 1 %></strong><br>
Â  Â  Â  Â  Â  Â  <span>Minutes: <%= s.minutes_played %></span>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  <% }) %>
Â  Â  Â  <% } else { %>
Â  Â  Â  Â  <div class="session-box">No past sessions.</div>
Â  Â  Â  <% } %>
Â  Â  </div>
Â  </div>

Â  Â  <div class="column">
Â  Â  <h3>Shifts</h3>
Â  Â  <div class="box"><strong>Attended:</strong> <%= shifts.attended || 0 %></div>
Â  Â  
Â  Â  Â  Â  <div class="box">
Â  Â      <strong>Hosted/Co-Hosted:</strong> 
Â  Â      <%= (shifts.hosted || 0) + (shifts.coHosted ? shifts.coHosted.length : 0) %>
Â  Â  </div>

Â  Â  <% if (shifts.coHosted && shifts.coHosted.length > 0) { %>
Â  Â  Â  <hr>
Â  Â  Â  <h4>Co-Hosted Details</h4>
Â  Â  Â  <% shifts.coHosted.forEach(c => { %>
Â  Â  Â  Â  <div class="box">
Â  Â  Â  Â  Â  <strong>Event:</strong> <%= c.name %><br>
Â  Â  Â  Â  Â  <span>Host: <%= c.host %></span>
Â  Â  Â  Â  </div>
Â  Â  Â  <% }) %>
Â  Â  <% } %>
Â  </div>

</div>

<div id="sessionModal" class="modal">
Â  <div class="modal-content">
Â  Â  <div class="modal-header">
Â  Â  Â  <span class="close" onclick="closeModal()">&times;</span>
Â  Â  Â  Â  Â  Â  <span id="modal-header-text"><%= player.username %> - <%= player.group_rank %></span>
Â  Â  </div>
Â  Â  <div class="modal-body">
Â  Â  Â  Â  Â  Â  <p><strong>Username:</strong> <%= player.username %></p>
Â  Â  Â  <p><strong>Time In Game:</strong> <span id="modal-minutes-played"></span> minutes</p>
Â  Â  Â  <p><strong>Session Start:</strong> <span id="modal-session-start"></span></p>
Â  Â  Â  <p><strong>Session End:</strong> <span id="modal-session-end"></span></p>
Â  Â  </div>
Â  </div>
</div>

<script>
    // Data passed from server (full sessions list)
    const allSessions = JSON.parse('<%- JSON.stringify(sessions || []) %>');
    const playerUsername = "<%= player.username %>";
    const playerRank = "<%= player.group_rank %>";
    const modal = document.getElementById('sessionModal');

    // Utility function to format milliseconds to HH:MM:SS
    function formatTime(ms) {
        let totalSeconds = Math.floor(ms / 1000);
        let hours = Math.floor(totalSeconds / 3600);
        let minutes = Math.floor((totalSeconds % 3600) / 60);
        let seconds = totalSeconds % 60;

        const pad = num => String(num).padStart(2, '0');
        return `${pad(hours)}:${pad(minutes)}:${pad(seconds)}`;
    }

    /* ----------------------------------
     * 1. Live Counter Logic 
     * ---------------------------------- */

    const startTimeInput = document.getElementById('session-start-time');
    if (startTimeInput) {
        const startTimeMs = parseInt(startTimeInput.value);
        
        function updateLiveCounter() {
            const elapsed = Date.now() - startTimeMs;
            document.getElementById('live-time').textContent = formatTime(elapsed);
        }

        updateLiveCounter();
        setInterval(updateLiveCounter, 1000);
    }


    /* ----------------------------------
     * 2. Modal/Clickable Session Logic
     * ---------------------------------- */

    function showSessionDetails(index) {
        const session = allSessions[index];
        if (!session) return;

        // Set Header (Blue banner content)
        const headerText = `${playerUsername} - ${playerRank}`;
        document.getElementById('modal-header-text').textContent = headerText;

        // Set Body Content
        document.getElementById('modal-minutes-played').textContent = session.minutes_played;
        document.getElementById('modal-session-start').textContent = new Date(session.session_start).toLocaleString();
        document.getElementById('modal-session-end').textContent = new Date(session.session_end).toLocaleString();

        // Show Modal
        modal.style.display = "block";
    }

    function closeModal() {
        modal.style.display = "none";
    }

    // Close the modal if the user clicks anywhere outside of the modal content
    window.onclick = function(event) {
        if (event.target == modal) {
            closeModal();
        }
    }
</script>

</body>
</html>
