<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Mochi Bar - <%= player.username %></title>
<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
<style>
  body {
    font-family: 'Roboto', sans-serif;
    background: #ffffff;
    margin: 0;
    padding: 0;
    color: #000;
  }

  header {
    background: #42b4ff;
    color: black;
    font-weight: 700;
    font-size: 48px;
    padding: 25px 40px;
    text-align: left;
    border-bottom: 2px solid #b267f7;
  }

  .container {
    max-width: 1400px;
    margin: 30px auto;
    display: flex;
    justify-content: space-between;
    gap: 40px;
    padding: 0 20px;
    flex-wrap: wrap;
  }

  .column {
    background: #e0e0e0;
    flex: 1;
    min-width: 300px;
    padding: 20px;
    box-sizing: border-box;
  }

  .column h3 {
    text-align: center;
    font-size: 22px;
    font-weight: 700;
    margin: 0 0 15px;
  }

  .avatar-container {
    background: #c0c0c0;
    width: 100%;
    height: 160px;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 15px;
  }

  .avatar {
    width: 120px;
    height: 120px;
    border-radius: 50%;
    object-fit: cover;
    border: 3px solid #42b4ff;
  }

  .content-block {
    background: #c0c0c0;
    padding: 10px;
    text-align: center;
    font-size: 16px;
    margin-bottom: 15px;
    font-weight: 500;
    word-wrap: break-word;
  }

  .content-block.clickable:hover {
    background: #b6b6b6;
    cursor: pointer;
  }

  hr {
    border: none;
    border-top: 3px solid black;
    margin: 15px 0;
  }

  .sessions-scroll {
    max-height: 380px;
    overflow-y: auto;
    padding-right: 5px;
  }

  /* Modal Styling */
  .modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0,0,0,0.5);
  }

  .modal-content {
    background-color: #fefefe;
    margin: 10% auto;
    padding: 20px;
    border: 1px solid #888;
    width: 400px;
    border-radius: 6px;
  }

  .modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-weight: bold;
    margin-bottom: 10px;
  }

  .close {
    color: #aaa;
    font-size: 28px;
    font-weight: bold;
    cursor: pointer;
  }

  .close:hover {
    color: black;
  }

  #live-time {
    font-weight: 700;
    color: #28a745;
  }
</style>
</head>
<body>

<header>Mochi Bar Database</header>

<div class="container">

  <!-- Left Column -->
  <div class="column">
    <h3>Username</h3>
    <div class="avatar-container">
      <img src="<%= player.avatar_url %>" alt="Avatar" class="avatar" onerror="this.src='https://placehold.co/120x120/e0e6f0/5f6c7b?text=Error';">
    </div>
    <div class="content-block"><strong><%= player.username %></strong></div>
    <div class="content-block"><strong>Group Rank:</strong> <%= player.group_rank %></div>
    <div class="content-block"><strong>Notes:</strong> <%= player.notes || 'No notes available.' %></div>
  </div>

  <!-- Middle Column -->
  <div class="column">
    <h3>Sessions</h3>

    <% if (ongoingSession) { 
       const startTimeString = ongoingSession.session_start_time;
       const startTime = startTimeString ? new Date(startTimeString).getTime() : Date.now();
    %>
      <div class="content-block" id="ongoing-session-box">
        <strong>Ongoing session? If so put here</strong><br>
        <span style="font-weight: normal;">Start: <%= new Date(startTime).toLocaleTimeString() %></span><br>
        <div style="margin-top: 5px;">Time: <span id="live-time">00:00:00</span></div>
        <input type="hidden" id="session-start-time" value="<%= startTime %>">
      </div>
    <% } else { %>
      <div class="content-block">No ongoing session</div>
    <% } %>

    <hr>

    <div class="sessions-scroll">
      <% if (sessions && sessions.length > 0) { %>
        <% sessions.slice(0, 4).forEach((s, index) => { %>
          <div class="content-block clickable" onclick="showSessionDetails(<%= index %>)">
            <strong>Past session</strong><br>
            <span>Minutes Played: <%= s.minutes_played %></span>
          </div>
        <% }) %>
      <% } else { %>
        <div class="content-block">No past sessions.</div>
      <% } %>
    </div>
  </div>

  <!-- Right Column -->
  <div class="column">
    <h3>Shifts</h3>
    <div class="content-block">
      <strong>Shift Attended:</strong> <%= shifts.attended || 0 %>
    </div>
    <div class="content-block">
      <strong>Shift Hosted:</strong> <%= shifts.hosted || 0 %>
    </div>
    <hr>
    <div class="content-block">Show shift is Co/Host of the shift</div>
    <div class="content-block">Show shift is Co/Host of the shift</div>
    <div class="content-block">Show shift is Co/Host of the shift</div>
  </div>

</div>

<!-- Session Modal -->
<div id="sessionModal" class="modal">
  <div class="modal-content">
    <div class="modal-header">
      <span id="modal-header-text"><%= player.username %> - <%= player.group_rank %></span>
      <span class="close" onclick="closeModal()">&times;</span>
    </div>
    <div class="modal-body">
      <p><strong>Username:</strong> <span><%= player.username %></span></p>
      <p><strong>Time In Game:</strong> <span id="modal-minutes-played"></span> minutes</p>
      <p><strong>Session Start:</strong> <span id="modal-session-start"></span></p>
      <p><strong>Session End:</strong> <span id="modal-session-end"></span></p>
    </div>
  </div>
</div>

<script>
  const allSessions = JSON.parse('<%- JSON.stringify(sessions || []) %>');
  const modal = document.getElementById('sessionModal');

  function formatTime(ms) {
    let totalSeconds = Math.floor(ms / 1000);
    let hours = Math.floor(totalSeconds / 3600);
    let minutes = Math.floor((totalSeconds % 3600) / 60);
    let seconds = totalSeconds % 60;
    const pad = num => String(num).padStart(2, '0');
    return `${pad(hours)}:${pad(minutes)}:${pad(seconds)}`;
  }

  const startTimeInput = document.getElementById('session-start-time');
  if (startTimeInput) {
    const startTimeMs = parseInt(startTimeInput.value);
    function updateLiveCounter() {
      const elapsed = Date.now() - startTimeMs;
      document.getElementById('live-time').textContent = formatTime(elapsed);
    }
    updateLiveCounter();
    setInterval(updateLiveCounter, 1000);
  }

  function showSessionDetails(index) {
    const session = allSessions[index];
    if (!session) return;
    document.getElementById('modal-minutes-played').textContent = session.minutes_played;
    document.getElementById('modal-session-start').textContent = new Date(session.session_start).toLocaleString();
    document.getElementById('modal-session-end').textContent = new Date(session.session_end).toLocaleString();
    modal.style.display = "block";
  }

  function closeModal() {
    modal.style.display = "none";
  }

  window.onclick = function(event) {
    if (event.target === modal) closeModal();
  }
</script>

</body>
</html>
