<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Mochi Bar Database</title>
<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
<style>
  body {
    font-family: 'Roboto', sans-serif;
    margin: 0;
    background: #fff;
  }

  header {
    background: #42b4ff;
    color: black;
    font-size: 48px;
    font-weight: 700;
    padding: 25px 40px;
    text-align: left;
  }

  .container {
    max-width: 1400px;
    margin: 30px auto;
    display: flex;
    justify-content: space-between;
    gap: 40px;
    padding: 0 20px;
    flex-wrap: wrap;
  }

  .column {
    background: #d9d9d9;
    flex: 1;
    min-width: 300px;
    padding: 20px;
    display: flex;
    flex-direction: column;
    align-items: center;
    box-sizing: border-box;
  }

  .column h3 {
    font-size: 22px;
    font-weight: 700;
    text-align: center;
    margin-bottom: 20px;
  }

  .avatar-placeholder {
    background: #b5b5b5;
    width: 180px;
    height: 160px;
    margin-bottom: 20px;
  }

  .content-block {
    background: #b5b5b5;
    width: 100%;
    text-align: center;
    padding: 15px 10px;
    font-size: 16px;
    margin-bottom: 15px;
    box-sizing: border-box;
  }

  hr {
    width: 100%;
    border: none;
    border-top: 3px solid black;
    margin: 15px 0;
  }

  .sessions-scroll, .shifts-scroll {
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 15px;
  }

  @media (max-width: 900px) {
    .container {
      flex-direction: column;
      gap: 20px;
    }
  }
</style>
</head>
<body>

<header>Mochi Bar Database</header>

<div class="container">

  <!-- Left Column -->
  <div class="column">
    <h3><%= player.username %></h3>
    <div class="avatar-placeholder"></div>
    <div class="content-block">Group Rank: <%= player.group_rank %></div>
    <div class="content-block">Notes: <%= player.notes || 'No notes' %></div>
  </div>

  <!-- Middle Column -->
  <div class="column">
    <h3>Sessions</h3>
    <% if (ongoingSession) { %>
      <div class="content-block">Ongoing session? If so put here</div>
    <% } else { %>
      <div class="content-block">No ongoing session</div>
    <% } %>
    <hr>
    <div class="sessions-scroll">
      <% if (sessions && sessions.length > 0) { %>
        <% sessions.slice(0, 4).forEach(s => { %>
          <div class="content-block">Past session â€” <%= s.minutes_played %> min</div>
        <% }) %>
      <% } else { %>
        <div class="content-block">No past sessions</div>
      <% } %>
    </div>
  </div>

  <!-- Right Column -->
  <div class="column">
    <h3>Shifts</h3>
    <div class="content-block">Shift Attended: <%= shifts.attended || 0 %></div>
    <div class="content-block">Shift Hosted: <%= shifts.hosted || 0 %></div>
    <hr>
    <div id="player-shifts" class="shifts-scroll">
      <div class="content-block">Loading scheduled shifts...</div>
    </div>
  </div>

</div>

<script>
  const playerUsername = "<%= player.username %>";
  const normalizedPlayerName = playerUsername.replace(/\s/g, '').toLowerCase();
  const playerShiftsContainer = document.getElementById('player-shifts');

  async function loadPlayerShifts() {
    try {
      const res = await fetch('/sessions'); // your backend returns all shifts
      const sessions = await res.json();
      if (!Array.isArray(sessions)) throw new Error('Invalid data');

      const now = Math.floor(Date.now() / 1000);

      const relevantShifts = sessions.filter(s => {
        const host = s.host ? s.host.replace(/\s/g, '').toLowerCase() : '';
        const cohost = s.cohost ? s.cohost.replace(/\s/g, '').toLowerCase() : '';
        return (host === normalizedPlayerName || cohost === normalizedPlayerName) && s.time > now;
      });

      playerShiftsContainer.innerHTML = '';

      if (relevantShifts.length === 0) {
        playerShiftsContainer.innerHTML = '<div class="content-block">No upcoming shifts.</div>';
        return;
      }

      relevantShifts.forEach(shift => {
        const isHost = shift.host.replace(/\s/g, '').toLowerCase() === normalizedPlayerName;
        const role = isHost ? 'Host' : 'Co-Host';
        const box = document.createElement('div');
        box.className = 'content-block';
        box.textContent = `${role} of shift on ${new Date(shift.time * 1000).toLocaleString()}`;
        playerShiftsContainer.appendChild(box);
      });

    } catch (err) {
      console.error(err);
      playerShiftsContainer.innerHTML = '<div class="content-block" style="color:red;">Failed to load shifts</div>';
    }
  }

  document.addEventListener('DOMContentLoaded', loadPlayerShifts);
</script>

</body>
</html>
